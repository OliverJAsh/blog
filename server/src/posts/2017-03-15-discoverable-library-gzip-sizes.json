{
    "title": "Discoverable library gzip sizes",
    "date": "2017-03-15",
    "body": "<p>You’ve heard good things about a library. It has thousands of stars on GitHub. Surely the code is concise and without bugs.</p><p>Not so fast—before you pull down any library for use in your project, you should be aware of how big it is.</p><p>I’ll show you an easy way to find the size for yourself, and how you can help make this information more discoverable for future developers when they have the same question.</p><p>Firstly we need a URL to the compiled file. This can usually be found on a CDN, or buried somewhere in the GitHub repository or in the published npm package. For GitHub, grab the raw URL. For npm packages, use a service such as <a href=\"https://unpkg.com/\">unpkg.com</a>.</p><p>Once you have the URL, you can curl it and pipe the response into <a href=\"https://github.com/sindresorhus/gzip-size-cli\">gzip-size-cli</a> for a nicely formatted number (or <code>gzip - | wc -c</code>).</p><pre><code>yarn global add gzip-size-cli\ncurl -sL YOUR_URL | gzip-size\n# E.g. curl -sL https://unpkg.com/react/dist/react.min.js | gzip-size</code></pre><p>Wouldn’t it be nice if this information was discoverable in the <code>README</code> of a GitHub project? Enter <a href=\"https://github.com/ngryman/badge-size\">badge-size</a>.</p><p>Whenever you go through the steps above to find a file size, do your peers a favour and raise a pull request to the source project, adding this badge to the <code>README</code>. Just drop the above URL in:</p><pre><code>![gzip size](http://img.badgesize.io/YOUR_URL?compression=gzip)</code></pre><p>Example PR: <a href=\"https://github.com/facebook/react/pull/9177\">https://github.com/facebook/react/pull/9177</a></p>"
}
